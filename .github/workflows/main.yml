# This workflow will build a Java project with Maven on Windows and Mac, and deploy to Github Packages for the repo
 # For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

  name: Java CI with Maven

  on:
   push:
     branches: [ master, dev ]
   pull_request:
     branches: [ master, dev ]

  jobs:

    # build-mac:

    #  runs-on: macos-latest

    #  name: Java Mac Build
    #  steps:
    #  - uses: actions/checkout@v2
    #  - name: Set up JDK 1.8
    #    uses: actions/setup-java@v1
    #    with:
    #      java-version: 1.8
    #  - name: Build with Maven
    #    run: mvn -B package --file pom.xml

    # build-windows:

    #  runs-on: windows-latest

    #  name: Java Windows Build
    #  steps:
    #  - uses: actions/checkout@v2
    #  - name: Set up JDK 1.8
    #    uses: actions/setup-java@v1
    #    with:
    #      java-version: 1.8
    #  - name: Build with Maven
    #    run: mvn package
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      build-windows:

     runs-on: windows-latest

    name: Java Windows Build
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # publish-windows:

    #  needs: build-windows

    #  runs-on: windows-latest

    #  name: Java Windows Build and Publish
    #  steps:
    #  - uses: actions/checkout@v2
    #  - name: Set up JDK 1.8
    #    uses: actions/setup-java@v1
    #    with:
    #      java-version: 1.8
    # #  - name: Build with Maven
    # #    run: mvn -B package --file pom.xml
    #  - name: Publish
    #    run: mvn package
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
